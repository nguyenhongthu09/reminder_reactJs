Chỉnh sửa lại:
+gộp 2 form edit và add lại chung với nhau: dùng type để phân biệt nên mở đóng form nào và ngoài ra tạo state: formdata:  để đổ dử liệu khi edit và set rỗng khi mở form add
+ở listnoteHome : tạo state để lưu dữ liệu API của getList và getColor để sau này dùng props  để gọi lại tránh gọi API
+ cap nhat lai input trong edit

+ service nam trong component , chi chua API va update setstate khong duoc goi su kien event
+ doi lai ten cho hop li


+ Edit lai giao dien web
+Các Thuộc tính trong Button

    onClick: Hàm để sử lý khi người dùng nhấp vào nút.​

    lable: Hiển thị văn bản bên trong nút.​

    color: Cài đặt màu nền.​

    disable: Vô hiệu hóa người dùng tương tác với thành phần button.​

    accessibilityLabel: Hiển thị văn bản hỗ trợ người khiếm thị.
    className:Xác định lớp CSS của trường nhập liệu, cho phép bạn tùy chỉnh kiểu dáng bằng CSS.
    type

+Các thuộc tính trong thẻ Input:
    type : xác định loại trường nhập liệu
    value : Xác định giá trị mặc định của trường nhập liệu
    onChange: Xác định hàm xử lý sự kiện khi giá trị của trường nhập liệu thay đổi.
    placeholder: Hiển thị một văn bản gợi ý trong trường nhập liệu, giúp người dùng hiểu rõ hơn về mục đích của trường.
    disabled: Xác định trạng thái vô hiệu hóa của trường nhập liệu
    required: Đánh dấu trường nhập liệu là bắt buộc phải điền.
    className:Xác định lớp CSS của trường nhập liệu, cho phép bạn tùy chỉnh kiểu dáng bằng CSS.

+ Dropdown
        <Dropdown actions={[
    {
        id: 1,
        key: ‘delete’,
        icon: ‘...path’
        onClick: 
    },
    {
        id: 2,
        key: ‘edit’,
        icon: ‘...path’
    },
    {
        id: 3,
        key: ‘move’,
        icon: ‘...path’
    }
]} />
///////////////////////////
class Example extends React.Component {
  constructor() {
    super();
    this.state = {
      value: 0,
    };
  }

  // Function syntax
  handleClickFunction() {
    this.setState((prevState) => ({ value: prevState.value + 1 }));
  }

  // Arrow function syntax
  handleClickArrow = () => {
    // 'this' is bound to the class instance
    this.setState((prevState) => ({ value: prevState.value + 1 }));
  };

  render() {
    return (
      <div>
        <button onClick={this.handleClickFunction.bind(this)}>Click (Function)</button>
        <button onClick={this.handleClickArrow}>Click (Arrow)</button>
      </div>
    );
  }
}
+ Function thông thường: cần sử dụng .bind(this) để đảm bảo rằng this trong hàm handleClickFunction sẽ trỏ đến đúng instance của class Example.Nếu không sử dụng bind(this) thì giá trị của this sẽ là undefined khi hàm đó được gọi. 
+ Arrow function: không thay đổi giá trị của this. nó sẽ giữ giá trị của this của nó từ ngữ cảnh của hàm bao bọc nó. 
    Do đó, trong trường hợp này, this trong handleClickArrow tự động trỏ đến instance của class Example mà không cần sử dụng .bind(this).
-> Tóm lại, sử dụng .bind(this) với "function syntax" là để đảm bảo rằng this được chính xác trong hàm, trong khi arrow function giữ giá trị this từ ngữ cảnh của nó.


